// <auto-generated />
using Marketplace.Infrastructure.Sales.SellerPersistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Marketplace.Infrastructure.Migrations.SellerDb
{
    [DbContext(typeof(SellerDbContext))]
    partial class SellerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Marketplace.Infrastructure.Sales.SellerPersistence.Offer", b =>
                {
                    b.Property<string>("BuyerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SellerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SellerId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SellerId2")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BuyerId", "ProductId");

                    b.HasIndex("SellerId");

                    b.HasIndex("SellerId1");

                    b.HasIndex("SellerId2");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("Marketplace.Infrastructure.Sales.SellerPersistence.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SellerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SellerId1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.HasIndex("SellerId1");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Marketplace.Infrastructure.Sales.SellerPersistence.Seller", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("Marketplace.Infrastructure.Sales.SellerPersistence.Offer", b =>
                {
                    b.HasOne("Marketplace.Infrastructure.Sales.SellerPersistence.Seller", null)
                        .WithMany("DeclinedOffers")
                        .HasForeignKey("SellerId");

                    b.HasOne("Marketplace.Infrastructure.Sales.SellerPersistence.Seller", null)
                        .WithMany("ReceivedOffers")
                        .HasForeignKey("SellerId1");

                    b.HasOne("Marketplace.Infrastructure.Sales.SellerPersistence.Seller", null)
                        .WithMany("AcceptedOffers")
                        .HasForeignKey("SellerId2");
                });

            modelBuilder.Entity("Marketplace.Infrastructure.Sales.SellerPersistence.Product", b =>
                {
                    b.HasOne("Marketplace.Infrastructure.Sales.SellerPersistence.Seller", null)
                        .WithMany("ArchivedProducts")
                        .HasForeignKey("SellerId");

                    b.HasOne("Marketplace.Infrastructure.Sales.SellerPersistence.Seller", null)
                        .WithMany("ProductForSale")
                        .HasForeignKey("SellerId1");
                });

            modelBuilder.Entity("Marketplace.Infrastructure.Sales.SellerPersistence.Seller", b =>
                {
                    b.Navigation("AcceptedOffers");

                    b.Navigation("ArchivedProducts");

                    b.Navigation("DeclinedOffers");

                    b.Navigation("ProductForSale");

                    b.Navigation("ReceivedOffers");
                });
#pragma warning restore 612, 618
        }
    }
}
