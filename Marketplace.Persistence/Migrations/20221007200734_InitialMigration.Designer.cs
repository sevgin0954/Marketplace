// <auto-generated />
using Marketplace.Persistence.Sales;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Marketplace.Persistence.Migrations
{
    [DbContext(typeof(SalesDbContext))]
    [Migration("20221007200734_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BuyerEntityOfferEntity", b =>
                {
                    b.Property<string>("BuyersWithStartedOffersId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StartedPendingOffersId")
                        .HasColumnType("int");

                    b.HasKey("BuyersWithStartedOffersId", "StartedPendingOffersId");

                    b.HasIndex("StartedPendingOffersId");

                    b.ToTable("BuyerEntityOfferEntity");
                });

            modelBuilder.Entity("BuyerEntitySellerEntity", b =>
                {
                    b.Property<string>("BannedBuyersId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SellersWhereBuyerIsBannedId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BannedBuyersId", "SellersWhereBuyerIsBannedId");

                    b.HasIndex("SellersWhereBuyerIsBannedId");

                    b.ToTable("BuyerEntitySellerEntity");
                });

            modelBuilder.Entity("Marketplace.Persistence.Sales.BuyerEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PendingOffersCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Buyers");
                });

            modelBuilder.Entity("Marketplace.Persistence.Sales.OfferEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BuyerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RejectMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SellerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SellerId");

                    b.ToTable("OfferEntity");
                });

            modelBuilder.Entity("Marketplace.Persistence.Sales.ProductEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PriceCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SellerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Marketplace.Persistence.Sales.SellerEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("BuyerEntityOfferEntity", b =>
                {
                    b.HasOne("Marketplace.Persistence.Sales.BuyerEntity", null)
                        .WithMany()
                        .HasForeignKey("BuyersWithStartedOffersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketplace.Persistence.Sales.OfferEntity", null)
                        .WithMany()
                        .HasForeignKey("StartedPendingOffersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BuyerEntitySellerEntity", b =>
                {
                    b.HasOne("Marketplace.Persistence.Sales.BuyerEntity", null)
                        .WithMany()
                        .HasForeignKey("BannedBuyersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketplace.Persistence.Sales.SellerEntity", null)
                        .WithMany()
                        .HasForeignKey("SellersWhereBuyerIsBannedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Marketplace.Persistence.Sales.OfferEntity", b =>
                {
                    b.HasOne("Marketplace.Persistence.Sales.BuyerEntity", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId");

                    b.HasOne("Marketplace.Persistence.Sales.ProductEntity", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("Marketplace.Persistence.Sales.SellerEntity", "Seller")
                        .WithMany("Offers")
                        .HasForeignKey("SellerId");

                    b.Navigation("Buyer");

                    b.Navigation("Product");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("Marketplace.Persistence.Sales.ProductEntity", b =>
                {
                    b.HasOne("Marketplace.Persistence.Sales.SellerEntity", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("Marketplace.Persistence.Sales.SellerEntity", b =>
                {
                    b.Navigation("Offers");
                });
#pragma warning restore 612, 618
        }
    }
}
