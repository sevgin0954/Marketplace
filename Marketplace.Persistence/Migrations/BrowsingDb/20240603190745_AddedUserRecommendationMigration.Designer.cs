// <auto-generated />
using System;
using Marketplace.Persistence.Browsing;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Marketplace.Persistence.Migrations.BrowsingDb
{
    [DbContext(typeof(BrowsingDbContext))]
    [Migration("20240603190745_AddedUserRecommendationMigration")]
    partial class AddedUserRecommendationMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Marketplace.Persistence.Browsing.CategoryEntity", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ParentCategoryId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Marketplace.Persistence.Browsing.ProductEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Marketplace.Persistence.Browsing.UserEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Marketplace.Persistence.Browsing.ProductEntity", b =>
                {
                    b.OwnsMany("Marketplace.Persistence.Browsing.ImageEntity", "Images", b1 =>
                        {
                            b1.Property<string>("ProductEntityId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Id")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("DisplayPriority")
                                .HasColumnType("int");

                            b1.HasKey("ProductEntityId", "Id");

                            b1.ToTable("ImageEntity");

                            b1.WithOwner()
                                .HasForeignKey("ProductEntityId");
                        });

                    b.Navigation("Images");
                });

            modelBuilder.Entity("Marketplace.Persistence.Browsing.UserEntity", b =>
                {
                    b.OwnsMany("Marketplace.Persistence.Browsing.SearchEntity", "Searches", b1 =>
                        {
                            b1.Property<string>("UserEntityId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"), 1L, 1);

                            b1.HasKey("UserEntityId", "Id");

                            b1.ToTable("Users_Searches");

                            b1.WithOwner()
                                .HasForeignKey("UserEntityId");
                        });

                    b.OwnsMany("Marketplace.Persistence.Browsing.ViewEntity", "Views", b1 =>
                        {
                            b1.Property<string>("UserEntityId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"), 1L, 1);

                            b1.Property<string>("CategoryId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<DateTime>("ViewDate")
                                .HasColumnType("datetime2");

                            b1.HasKey("UserEntityId", "Id");

                            b1.HasIndex("CategoryId");

                            b1.ToTable("ViewEntity");

                            b1.HasOne("Marketplace.Persistence.Browsing.CategoryEntity", "Category")
                                .WithMany()
                                .HasForeignKey("CategoryId");

                            b1.WithOwner()
                                .HasForeignKey("UserEntityId");

                            b1.OwnsOne("Marketplace.Persistence.Browsing.SearchEntity", "Search", b2 =>
                                {
                                    b2.Property<string>("ViewEntityUserEntityId")
                                        .HasColumnType("nvarchar(450)");

                                    b2.Property<int>("ViewEntityId")
                                        .HasColumnType("int");

                                    b2.HasKey("ViewEntityUserEntityId", "ViewEntityId");

                                    b2.ToTable("ViewEntity");

                                    b2.WithOwner()
                                        .HasForeignKey("ViewEntityUserEntityId", "ViewEntityId");
                                });

                            b1.Navigation("Category");

                            b1.Navigation("Search");
                        });

                    b.Navigation("Searches");

                    b.Navigation("Views");
                });
#pragma warning restore 612, 618
        }
    }
}
