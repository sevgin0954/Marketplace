// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Marketplace.Persistence.Migrations.SalesDbContext
{
    [DbContext(typeof(Marketplace.Persistence.Sales.SalesDbContext))]
    [Migration("20240319175347_AddedMakeOfferSagaDataMigration")]
    partial class AddedMakeOfferSagaDataMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BuyerEntitySellerEntity", b =>
                {
                    b.Property<string>("BannedBuyersId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SellersWhereBuyerIsBannedId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BannedBuyersId", "SellersWhereBuyerIsBannedId");

                    b.HasIndex("SellersWhereBuyerIsBannedId");

                    b.ToTable("BuyerEntitySellerEntity");
                });

            modelBuilder.Entity("Marketplace.Persistence.Sales.BuyerEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PendingOffersCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Buyers");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            PendingOffersCount = 1
                        });
                });

            modelBuilder.Entity("Marketplace.Persistence.Sales.MakeOfferSagaDataEntity", b =>
                {
                    b.Property<string>("SellerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BuyerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsBuyerNotBannedChecked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsProductEligableForBuyChecked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("SellerId", "BuyerId", "ProductId");

                    b.ToTable("MakeOfferSagaDatas");
                });

            modelBuilder.Entity("Marketplace.Persistence.Sales.OfferEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BuyerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SellerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SellerId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("Marketplace.Persistence.Sales.ProductEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PriceCurrency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("SellerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Price = 1m,
                            PriceCurrency = "BGN",
                            SellerId = "1",
                            Status = "IN Sale"
                        });
                });

            modelBuilder.Entity("Marketplace.Persistence.Sales.SellerEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Sellers");

                    b.HasData(
                        new
                        {
                            Id = "1"
                        });
                });

            modelBuilder.Entity("BuyerEntitySellerEntity", b =>
                {
                    b.HasOne("Marketplace.Persistence.Sales.BuyerEntity", null)
                        .WithMany()
                        .HasForeignKey("BannedBuyersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketplace.Persistence.Sales.SellerEntity", null)
                        .WithMany()
                        .HasForeignKey("SellersWhereBuyerIsBannedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Marketplace.Persistence.Sales.BuyerEntity", b =>
                {
                    b.OwnsMany("Marketplace.Persistence.Sales.Product", "StartedOffersProductsIds", b1 =>
                        {
                            b1.Property<string>("BuyerEntityId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Id")
                                .HasColumnType("nvarchar(450)");

                            b1.HasKey("BuyerEntityId", "Id");

                            b1.ToTable("Product");

                            b1.WithOwner()
                                .HasForeignKey("BuyerEntityId");
                        });

                    b.Navigation("StartedOffersProductsIds");
                });

            modelBuilder.Entity("Marketplace.Persistence.Sales.OfferEntity", b =>
                {
                    b.HasOne("Marketplace.Persistence.Sales.BuyerEntity", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId");

                    b.HasOne("Marketplace.Persistence.Sales.ProductEntity", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("Marketplace.Persistence.Sales.SellerEntity", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId");

                    b.Navigation("Buyer");

                    b.Navigation("Product");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("Marketplace.Persistence.Sales.ProductEntity", b =>
                {
                    b.HasOne("Marketplace.Persistence.Sales.SellerEntity", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId");

                    b.Navigation("Seller");
                });
#pragma warning restore 612, 618
        }
    }
}
